name: Run Tests on Project Neapolitan

on:
  push:
    branches: [main, development]

  pull_request:
    branches: [main]

jobs:
  test-frontend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: client

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: client/package-lock.json

      - name: install dependencies
        run: npm ci

      - name: run Tests
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Upload client coverage to folder
        uses: actions/upload-artifact@v4
        with:
          name: client-coverage
          path: client/coverage/

  test-backend:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"
          cache-dependency-path: server/package-lock.json

      - name: install dependencies
        run: npm ci

      - name: run Tests
        run: npm run test-coverage
        env:
          NODE_ENV: test

      - name: Upload server coverage to folder
        uses: actions/upload-artifact@v4
        with:
          name: server-coverage
          path: server/coverage/

  cypress-e2e:
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install client dependencies
        working-directory: client
        run: npm ci

      - name: Install server dependencies
        working-directory: server
        run: npm ci

      - name: Install Cypress (if in client directory)
        working-directory: client
        run: npx cypress install

      - name: Build frontend
        working-directory: client
        run: npm run build
        env:
          CI: true

      - name: Start backend server
        working-directory: server
        run: |
          node server.js &
          echo $! > ../backend.pid
        env:
          NODE_ENV: test
          PORT: 5000
          DATABASE_URL: ${{ secrets.AWS_DATABASE_URL }}
          # Or use individual database components:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Wait for backend
        run: npx wait-on http://localhost:5000/health -t 60000
        timeout-minutes: 2

      - name: Start frontend server
        working-directory: client
        run: |
          npm run start &
          echo $! > ../frontend.pid
        env:
          CI: true
          REACT_APP_API_URL: http://localhost:5000
          BROWSER: none

      - name: Wait for frontend
        run: npx wait-on http://localhost:3000 -t 60000
        timeout-minutes: 2

      - name: Run Cypress tests
        working-directory: client
        run: npm run cypress:run
        env:
          CYPRESS_BASE_URL: http://localhost:3000
          CYPRESS_API_URL: http://localhost:5000

      - name: Cleanup servers
        if: always()
        run: |
          if [ -f backend.pid ]; then
            kill $(cat backend.pid) || true
          fi
          if [ -f frontend.pid ]; then
            kill $(cat frontend.pid) || true
          fi